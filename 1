import struct
from PIL import Image

# Open the .mdl file
with open(r"C:\Users\defin\Desktop\tommy.mdl", "rb") as f:
    # Read the header
    magic, version, num_sections, sec1_offset, sec2_offset, num_models, mdl_offset, mdl_count, texture_offset, texture_count = struct.unpack("<4s6I", f.read(28))
    header_size = 28
header_data = f.read(header_size)
if len(header_data) < header_size:
    print("Error: Invalid header size")
    exit()
magic, version, num_sections, sec1_offset, sec2_offset, num_models, mdl_offset, mdl_count, texture_offset, texture_count = struct.unpack("<4s6I", header_data)
    
    # Find the texture section header
    f.seek(texture_offset)
    texture_magic, texture_version, num_textures, texture_data_offset = struct.unpack("<4s3I", f.read(16))
    
    # Read each texture tile and export as .png
    for i in range(num_textures):
        f.seek(texture_data_offset + i*0x2000)
        image_data = []
        for y in range(16):
            for x in range(16):
                pixel_data = f.read(2)
                # Parse the color index and map to an RGB color value
                r = (pixel_data[0] & 0x1F) * 8
                g = ((pixel_data[0] & 0xE0) >> 5 | (pixel_data[1] & 0x03) << 3) * 8
                b = ((pixel_data[1] & 0x7C) >> 2) * 8
                image_data.append((r, g, b))
        
        # Create a new image object and set the pixel values
        image = Image.new("RGB", (64, 64))
        image.putdata(image_data)
        
        # Save the image as a .png file
        image.save(f"texture_{i}.png")
